// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react";

// biome-ignore lint/suspicious/noExplicitAny: <explanation>
export const Index: Record<string, any> = {
    index: {
        name: "index",
        description: "",
        type: "registry:style",
        registryDependencies: ["utils"],
        files: [],
        component: null,
        meta: undefined,
    },
    input: {
        name: "input",
        description: "A input component",
        type: "registry:ui",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/ui/input.tsx",
                type: "registry:ui",
                target: "components/wed/input.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/ui/input.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "phone-input": {
        name: "phone-input",
        description: "A phone input component",
        type: "registry:ui",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/ui/phone-input.tsx",
                type: "registry:ui",
                target: "components/wed/phone-input.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/ui/phone-input.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    select: {
        name: "select",
        description: "A select component",
        type: "registry:ui",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/ui/select.tsx",
                type: "registry:ui",
                target: "components/wed/select.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/ui/select.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "color-picker": {
        name: "color-picker",
        description: "A color picker component",
        type: "registry:ui",
        registryDependencies: [
            "popover",
            "button",
            "https://ui.ednesdayw.com/r/colors.json",
        ],
        files: [
            {
                path: "src/registry/ui/color-picker.tsx",
                type: "registry:ui",
                target: "components/wed/color-picker.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/ui/color-picker.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "color-input": {
        name: "color-input",
        description: "A color input component",
        type: "registry:ui",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/ui/color-input.tsx",
                type: "registry:ui",
                target: "components/wed/color-input.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/ui/color-input.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    button: {
        name: "button",
        description: "A button component",
        type: "registry:ui",
        registryDependencies: ["https://ui.ednesdayw.com/r/use-ripple.json"],
        files: [
            {
                path: "src/registry/ui/button.tsx",
                type: "registry:ui",
                target: "components/wed/button.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/ui/button.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    pagination: {
        name: "pagination",
        description: "A pagination component",
        type: "registry:ui",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/ui/pagination.tsx",
                type: "registry:ui",
                target: "components/wed/pagination.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/ui/pagination.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "use-disclosure": {
        name: "use-disclosure",
        description: "A hook for managing disclosure state",
        type: "registry:hook",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/hooks/use-disclosure.ts",
                type: "registry:hook",
                target: "hooks/use-disclosure.ts",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/hooks/use-disclosure.ts");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "use-ripple": {
        name: "use-ripple",
        description: "A hook for creating ripples on an element",
        type: "registry:hook",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/hooks/use-ripple.ts",
                type: "registry:hook",
                target: "hooks/use-ripple.ts",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/hooks/use-ripple.ts");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "use-countdown": {
        name: "use-countdown",
        description: "A hook for creating a countdown timer",
        type: "registry:hook",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/hooks/use-countdown.ts",
                type: "registry:hook",
                target: "hooks/use-countdown.ts",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/hooks/use-countdown.ts");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "use-device-detection": {
        name: "use-device-detection",
        description: "A hook for detecting the device type",
        type: "registry:hook",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/hooks/use-device-detection.ts",
                type: "registry:hook",
                target: "hooks/use-device-detection.ts",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import(
                "@/registry/hooks/use-device-detection.ts"
            );
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "input-size-demo": {
        name: "input-size-demo",
        description: "A demo of the input size",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/input.json"],
        files: [
            {
                path: "src/registry/example/input/size.tsx",
                type: "registry:component",
                target: "components/demo/input-size-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/input/size.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "input-variant-demo": {
        name: "input-variant-demo",
        description: "A demo of the input variant",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/input.json"],
        files: [
            {
                path: "src/registry/example/input/variant.tsx",
                type: "registry:component",
                target: "components/demo/input-variant-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/input/variant.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "input-disabled-demo": {
        name: "input-disabled-demo",
        description: "A demo of the input disabled",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/input.json"],
        files: [
            {
                path: "src/registry/example/input/disabled.tsx",
                type: "registry:component",
                target: "components/demo/input-disabled-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/input/disabled.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "input-invalid-demo": {
        name: "input-invalid-demo",
        description: "A demo of the input invalid",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/input.json"],
        files: [
            {
                path: "src/registry/example/input/invalid.tsx",
                type: "registry:component",
                target: "components/demo/input-invalid-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/input/invalid.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "input-start-end-content-demo": {
        name: "input-start-end-content-demo",
        description: "A demo of the input start end content",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/input.json"],
        files: [
            {
                path: "src/registry/example/input/start-end-content.tsx",
                type: "registry:component",
                target: "components/demo/input-start-end-content-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import(
                "@/registry/example/input/start-end-content.tsx"
            );
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "input-password-demo": {
        name: "input-password-demo",
        description: "A demo of the input password",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/input.json"],
        files: [
            {
                path: "src/registry/example/input/password.tsx",
                type: "registry:component",
                target: "components/demo/input-password-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/input/password.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "input-form-demo": {
        name: "input-form-demo",
        description: "A demo of the input form",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/input.json"],
        files: [
            {
                path: "src/registry/example/input/form.tsx",
                type: "registry:component",
                target: "components/demo/input-form-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/input/form.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "phone-input-size-demo": {
        name: "phone-input-size-demo",
        description: "A demo of the phone input size",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/phone-input.json"],
        files: [
            {
                path: "src/registry/example/phone-input/size.tsx",
                type: "registry:component",
                target: "components/phone-input-size-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/phone-input/size.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "phone-input-variant-demo": {
        name: "phone-input-variant-demo",
        description: "A demo of the phone input variant",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/phone-input.json"],
        files: [
            {
                path: "src/registry/example/phone-input/variant.tsx",
                type: "registry:component",
                target: "components/phone-input-variant-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import(
                "@/registry/example/phone-input/variant.tsx"
            );
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "phone-input-disabled-demo": {
        name: "phone-input-disabled-demo",
        description: "A demo of the phone input disabled",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/phone-input.json"],
        files: [
            {
                path: "src/registry/example/phone-input/disabled.tsx",
                type: "registry:component",
                target: "components/phone-input-disabled-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import(
                "@/registry/example/phone-input/disabled.tsx"
            );
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "phone-input-invalid-demo": {
        name: "phone-input-invalid-demo",
        description: "A demo of the phone input invalid",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/phone-input.json"],
        files: [
            {
                path: "src/registry/example/phone-input/invalid.tsx",
                type: "registry:component",
                target: "components/phone-input-invalid-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import(
                "@/registry/example/phone-input/invalid.tsx"
            );
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "select-size-demo": {
        name: "select-size-demo",
        description: "A demo of the select size",
        type: "registry:component",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/example/select/size.tsx",
                type: "registry:component",
                target: "components/select-size-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/select/size.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "select-variant-demo": {
        name: "select-variant-demo",
        description: "A demo of the select variant",
        type: "registry:component",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/example/select/variant.tsx",
                type: "registry:component",
                target: "components/select-variant-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/select/variant.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "select-disabled-demo": {
        name: "select-disabled-demo",
        description: "A demo of the select disabled",
        type: "registry:component",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/example/select/disabled.tsx",
                type: "registry:component",
                target: "components/select-disabled-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/select/disabled.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "select-invalid-demo": {
        name: "select-invalid-demo",
        description: "A demo of the select invalid",
        type: "registry:component",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/example/select/invalid.tsx",
                type: "registry:component",
                target: "components/select-invalid-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/select/invalid.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "color-picker-demo": {
        name: "color-picker-demo",
        description: "A demo of the color picker",
        type: "registry:component",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/example/color-picker/demo.tsx",
                type: "registry:component",
                target: "components/color-picker-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import(
                "@/registry/example/color-picker/demo.tsx"
            );
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "color-input-variant-demo": {
        name: "color-input-variant-demo",
        description: "A demo of the color input variant",
        type: "registry:component",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/example/color-input/variant.tsx",
                type: "registry:component",
                target: "components/color-input-variant-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import(
                "@/registry/example/color-input/variant.tsx"
            );
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "button-variant-demo": {
        name: "button-variant-demo",
        description: "A demo of the button variant",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/button.json"],
        files: [
            {
                path: "src/registry/example/button/variant.tsx",
                type: "registry:component",
                target: "components/demo/button-variant-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/button/variant.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "button-size-demo": {
        name: "button-size-demo",
        description: "A demo of the button size",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/button.json"],
        files: [
            {
                path: "src/registry/example/button/size.tsx",
                type: "registry:component",
                target: "components/demo/button-size-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/button/size.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "button-icon-demo": {
        name: "button-icon-demo",
        description: "A demo of the button icon",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/button.json"],
        files: [
            {
                path: "src/registry/example/button/icon.tsx",
                type: "registry:component",
                target: "components/demo/button-icon-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/button/icon.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "button-loading-demo": {
        name: "button-loading-demo",
        description: "A demo of the button loading",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/button.json"],
        files: [
            {
                path: "src/registry/example/button/loading.tsx",
                type: "registry:component",
                target: "components/demo/button-loading-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/button/loading.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "button-form-demo": {
        name: "button-form-demo",
        description: "A demo of the button form",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/button.json"],
        files: [
            {
                path: "src/registry/example/button/form.tsx",
                type: "registry:component",
                target: "components/demo/button-form-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/button/form.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "use-disclosure-dialog-demo": {
        name: "use-disclosure-dialog-demo",
        description: "A demo of the use disclosure dialog",
        type: "registry:component",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/example/use-disclosure/dialog.tsx",
                type: "registry:component",
                target: "components/demo/use-disclosure-dialog-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import(
                "@/registry/example/use-disclosure/dialog.tsx"
            );
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "use-ripple-demo": {
        name: "use-ripple-demo",
        description: "A demo of the use ripple",
        type: "registry:component",
        registryDependencies: ["https://ui.ednesdayw.com/r/use-ripple.json"],
        files: [
            {
                path: "src/registry/example/use-ripple/demo.tsx",
                type: "registry:component",
                target: "components/demo/use-ripple-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/use-ripple/demo.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "pagination-demo": {
        name: "pagination-demo",
        description: "A demo of the pagination component",
        type: "registry:component",
        registryDependencies: [
            "https://ui.ednesdayw.com/r/pagination.json",
            "https://ui.ednesdayw.com/r/use-device-detection.json",
        ],
        files: [
            {
                path: "src/registry/example/pagination/demo.tsx",
                type: "registry:component",
                target: "components/demo/pagination-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/example/pagination/demo.tsx");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "use-countdown-demo": {
        name: "use-countdown-demo",
        description: "A demo of the use countdown",
        type: "registry:component",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/example/use-countdown/demo.tsx",
                type: "registry:component",
                target: "components/demo/use-countdown-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import(
                "@/registry/example/use-countdown/demo.tsx"
            );
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    "use-device-detection-demo": {
        name: "use-device-detection-demo",
        description: "A demo of the use device detection",
        type: "registry:component",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/example/use-device-detection/demo.tsx",
                type: "registry:component",
                target: "components/demo/use-device-detection-demo.tsx",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import(
                "@/registry/example/use-device-detection/demo.tsx"
            );
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    utils: {
        name: "utils",
        description: "",
        type: "registry:lib",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/lib/utils.ts",
                type: "registry:lib",
                target: "lib/utils.ts",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/lib/utils.ts");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    colors: {
        name: "colors",
        description: "",
        type: "registry:lib",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/lib/colors.ts",
                type: "registry:lib",
                target: "lib/colors.ts",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/lib/colors.ts");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
    paginate: {
        name: "paginate",
        description: "",
        type: "registry:lib",
        registryDependencies: undefined,
        files: [
            {
                path: "src/registry/lib/paginate.ts",
                type: "registry:lib",
                target: "lib/paginate.ts",
            },
        ],
        component: React.lazy(async () => {
            const mod = await import("@/registry/lib/paginate.ts");
            const exportName =
                Object.keys(mod).find(
                    (key) =>
                        typeof mod[key] === "function" ||
                        typeof mod[key] === "object",
                ) || item.name;
            return { default: mod.default || mod[exportName] };
        }),
        meta: undefined,
    },
};
