{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "field-textarea",
  "type": "registry:ui",
  "title": "Field Textarea",
  "description": "A field textarea component",
  "dependencies": [
    "textarea-autosize"
  ],
  "files": [
    {
      "path": "src/registry/ui/field-textarea.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { type VariantProps, cva } from \"class-variance-authority\";\nimport * as React from \"react\";\nimport TextareaAutosize, {\n  TextareaAutosizeProps,\n} from \"react-textarea-autosize\";\n\nexport const containerVariants = cva(\n  cn(\n    \"flex w-full h-fit px-2.5 py-2 relative rounded-md shadow-sm\",\n    \"text-base cursor-text\",\n    \"data-[is-invalid=true]:border-destructive\",\n    \"data-[disabled=true]:opacity-70 data-[disabled=true]:cursor-not-allowed data-[disabled=true]:hover:border-input\",\n    \"hover:border-ring focus-within:border-ring\",\n    \"transition-all duration-200\",\n  ),\n  {\n    variants: {\n      variant: {\n        default: \"bg-muted border-2 border-input\",\n        faded: cn(\n          \"bg-muted border-2 border-muted\",\n          \"hover:bg-accent hover:border-accent\",\n          \"focus-within:bg-accent focus-within:border-accent\",\n          \"data-[disabled=true]:hover:bg-muted data-[disabled=true]:hover:border-muted\",\n        ),\n        bordered: \"border-2 border-input\",\n        underline: \"border-b-2 border-input rounded-none shadow-none\",\n      },\n    },\n    compoundVariants: [\n      {\n        variant: \"underline\",\n        className: \"px-1\",\n      },\n    ],\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\ninterface FieldTextareaProps\n  extends Omit<React.ComponentProps<\"textarea\">, \"size\" | \"style\">,\n    TextareaAutosizeProps,\n    VariantProps<typeof containerVariants> {\n  id: string;\n  label: string;\n  textareaClassName?: string;\n  labelClassName?: string;\n  disableResize?: boolean;\n}\n\nconst FieldTextarea = React.forwardRef<HTMLTextAreaElement, FieldTextareaProps>(\n  (\n    {\n      className,\n      id,\n      label,\n      textareaClassName,\n      labelClassName,\n      placeholder,\n      value,\n      variant,\n      \"aria-invalid\": ariaInvalid,\n      disabled,\n      minRows,\n      maxRows,\n      disableResize,\n      ...props\n    },\n    ref,\n  ) => {\n    const textareaRef = React.useRef<HTMLTextAreaElement>(null);\n    const setRefs = React.useCallback((element: HTMLTextAreaElement | null) => {\n      textareaRef.current = element;\n      if (ref) {\n        if (typeof ref === \"function\") {\n          ref(element);\n        } else {\n          ref.current = element;\n        }\n      }\n    }, []);\n\n    return (\n      <div\n        className={cn(\n          containerVariants({ variant }),\n          \"group flex items-start justify-center gap-1.5\",\n          className,\n        )}\n        data-is-invalid={ariaInvalid?.toString()}\n        data-disabled={disabled?.toString()}\n        onClick={() => {\n          if (!disabled && textareaRef.current) {\n            textareaRef.current.focus();\n          }\n        }}\n      >\n        <div className=\"inline-flex w-full flex-col items-start relative\">\n          <label\n            htmlFor={id}\n            className={cn(\n              \"text-sm text-primary/80 origin-top-left\",\n              \"transition-all duration-200\",\n              \"group-data-[is-invalid=true]:text-destructive\",\n              labelClassName,\n            )}\n          >\n            {label}\n          </label>\n          <TextareaAutosize\n            ref={setRefs}\n            className={cn(\n              \"w-full min-h-[48px] outline-hidden bg-transparent text-sm\",\n              \"disabled:cursor-not-allowed placeholder:text-muted-foreground\",\n              disableResize ? \"resize-none\" : \"resize-y\",\n              textareaClassName,\n            )}\n            value={value}\n            disabled={disabled}\n            placeholder={placeholder}\n            minRows={minRows || 2}\n            maxRows={maxRows || 4}\n            {...props}\n          />\n        </div>\n      </div>\n    );\n  },\n);\n\nFieldTextarea.displayName = \"FieldTextarea\";\n\nexport { FieldTextarea, type FieldTextareaProps };\n",
      "type": "registry:ui",
      "target": "components/wed/field-textarea.tsx"
    }
  ]
}