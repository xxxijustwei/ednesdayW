{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "wallet-address",
  "type": "registry:lib",
  "dependencies": [
    "bs58",
    "viem"
  ],
  "files": [
    {
      "path": "src/registry/lib/wallet-address.ts",
      "content": "import { Point } from \"@noble/ed25519\";\nimport bs58 from \"bs58\";\nimport { hexToBytes, isAddress as isEVMAddress, sha256 } from \"viem\";\n\ntype Network = \"evm\" | \"tron\" | \"solana\";\n\nexport const isAddress = (address: string, network: Network = \"evm\") => {\n  switch (network) {\n    case \"evm\":\n      return isEVMAddress(address);\n    case \"tron\":\n      return isTronAddress(address);\n    case \"solana\":\n      return isSolanaAddress(address);\n  }\n};\n\nconst TRON_ADDRESS_SIZE = 34;\nconst TRON_ADDRESS_PREFIX_BYTE = 0x41;\n\nconst isTronAddress = (address: string) => {\n  if (address.length !== TRON_ADDRESS_SIZE) return false;\n\n  let decodeAddr = bs58.decode(address);\n  if (decodeAddr.length !== 25) return false;\n\n  if (decodeAddr[0] !== TRON_ADDRESS_PREFIX_BYTE) return false;\n\n  const checkSum = decodeAddr.slice(21);\n  decodeAddr = decodeAddr.slice(0, 21);\n\n  const hash0 = hexToBytes(sha256(decodeAddr));\n  const hash1 = hexToBytes(sha256(hash0));\n  const checkSum1 = hash1.slice(0, 4);\n\n  if (\n    checkSum[0] === checkSum1[0] &&\n    checkSum[1] === checkSum1[1] &&\n    checkSum[2] === checkSum1[2] &&\n    checkSum[3] === checkSum1[3]\n  )\n    return true;\n\n  return false;\n};\n\nconst SOLANA_PUBKEY_BYTES = 32;\nconst SOLANA_ADDRESS_REGEX = /^[1-9A-HJ-NP-Za-km-z]{43,44}$/;\n\nconst isSolanaAddress = (address: string): boolean => {\n  if (!SOLANA_ADDRESS_REGEX.test(address)) {\n    return false;\n  }\n\n  try {\n    const decoded = bs58.decode(address);\n    if (decoded.length !== SOLANA_PUBKEY_BYTES) {\n      return false;\n    }\n\n    if (decoded.every((byte) => byte === 0)) {\n      return false;\n    }\n\n    Point.fromBytes(decoded);\n    return true;\n  } catch {\n    return false;\n  }\n};\n",
      "type": "registry:lib",
      "target": "lib/wallet-address.ts"
    }
  ]
}