{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-ripple-demo",
  "type": "registry:component",
  "title": "Use Ripple Demo",
  "description": "A demo of the use ripple",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "https://ui.ednesdayw.com/r/use-ripple.json"
  ],
  "files": [
    {
      "path": "src/registry/example/use-ripple/demo.tsx",
      "content": "import { useRipple } from \"@/hooks/use-ripple\";\nimport { AnimatePresence, LazyMotion, domAnimation, m } from \"motion/react\";\n\nexport const UseRippleDemo = () => {\n  const { ripples, onClick, onClear } = useRipple();\n\n  return (\n    <div\n      className=\"w-full max-w-xs h-48 relative border-3 border-dashed border-border rounded-xl overflow-hidden cursor-pointer\"\n      onClick={onClick}\n    >\n      <div className=\"w-full h-full flex items-center justify-center\">\n        <span className=\"text-lg font-medium\">Click Me</span>\n      </div>\n      {ripples.map((ripple) => {\n        const duration = Math.min(\n          Math.max(0.01 * ripple.size, 0.2),\n          ripple.size > 100 ? 0.75 : 0.5,\n        );\n        return (\n          <LazyMotion key={ripple.id} features={domAnimation}>\n            <AnimatePresence mode=\"popLayout\">\n              <m.span\n                initial={{\n                  transform: \"scale(0)\",\n                  opacity: 0.35,\n                }}\n                animate={{ transform: \"scale(2)\", opacity: 0 }}\n                exit={{ opacity: 0 }}\n                style={{\n                  position: \"absolute\",\n                  backgroundColor: \"currentColor\",\n                  borderRadius: \"100%\",\n                  transformOrigin: \"center\",\n                  pointerEvents: \"none\",\n                  overflow: \"hidden\",\n                  inset: 0,\n                  zIndex: 0,\n                  top: ripple.y,\n                  left: ripple.x,\n                  width: `${ripple.size}px`,\n                  height: `${ripple.size}px`,\n                }}\n                transition={{ duration }}\n                onAnimationComplete={() => {\n                  onClear(ripple.id);\n                }}\n              />\n            </AnimatePresence>\n          </LazyMotion>\n        );\n      })}\n    </div>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/demo/use-ripple-demo.tsx"
    }
  ]
}